{{- define "immich.machine-learning.hardcodedValues" -}}
global:
  nameOverride: machine-learning

service:
  main:
    enabled: true
    primary: true
    type: ClusterIP
    ports:
      http:
        enabled: true
        primary: true
        port: 3003
        protocol: HTTP

probes:
  liveness: &probes
    enabled: true
    custom: true
    spec:
      httpGet:
        path: /ping
        port: http
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
  readiness: *probes
  startup:
    enabled: true
    custom: true
    spec:
      httpGet:
        path: /ping
        port: http
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 60
{{- end }}

{{- /* Have to reference with index here because the dash breaks a normal dereference */}}
{{ if (index .Values "machine-learning").enabled }}
{{- $ctx := deepCopy . -}}

{{- /* Render the built-in Immich machine-learning default values: */}}
{{- $hardcodedValuesYaml := include "immich.machine-learning.hardcodedValues" . }}
{{- $hardcodedValues := fromYaml $hardcodedValuesYaml }}

{{- /* Merge those into $ctx.Values: */}}
{{- $_ = mergeOverwrite $ctx.Values $hardcodedValues }}

{{- /* If the user set .Values.machine-learning.affinity, stuff it into $ctx.Values.affinity: */}}
{{- with (index .Values "machine-learning" "affinity") }}
{{- $_ = set $ctx.Values "affinity" . }}
{{- end }}

{{- /* Finally, call bjw-s.common.loader.all to build the Deployment, 
      with our updated $ctx that includes affinity. */}}
{{- include "bjw-s.common.loader.all" $ctx }}
{{ end }}
